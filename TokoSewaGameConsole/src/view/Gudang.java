/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import controller.AdminController;
import model.ConsoleDAO;
import model.ConsoleModel;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.util.List;

/**
 *
 * @author Anzio
 */
public class Gudang extends javax.swing.JFrame {
    private AdminController adminControl;
    private DefaultTableModel tableModel;
    /**
     * Creates new form Gudang
     */
    public Gudang() {
        initComponents();
        setupTable();
        
    }
    
    private void setupTable() {
        String[] columnNames = {"ID", "Paket Console", "Deskripsi", "Stok", "Harga (Rp)"};
        tableModel = new DefaultTableModel(columnNames, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Membuat tabel tidak bisa diedit langsung
            }
        };
        jTable1.setModel(tableModel);
        
        // Set lebar kolom
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);  // ID
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(120); // Paket
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(200); // Deskripsi
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);  // Stok
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);  // Harga
    }
    
    /**
     * Load data console dari database ke tabel
     */
    public void loadConsoleData() {
        try {
            // Clear existing data
            tableModel.setRowCount(0);         
            List<ConsoleModel> consoles = adminControl.loadConsoleList();
            
            if (consoles != null && !consoles.isEmpty()) {
                for (ConsoleModel console : consoles) {
                    Object[] rowData = {
                        console.getId(),
                        console.getPaket(),
                        console.getDeskripsi(),
                        console.getStock(),
                        "Rp " + console.getHarga().toString()
                    };
                    tableModel.addRow(rowData);
                }
            } else {
                System.out.println("No console data found or database connection failed");
                JOptionPane.showMessageDialog(this, 
                    "Tidak ada data console atau koneksi database gagal!", 
                    "Info", 
                    JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            System.err.println("Error loading console data: " + e.getMessage());
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, 
                "Error loading data: " + e.getMessage(), 
                "Database Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 500));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setMaximumSize(new java.awt.Dimension(600, 500));
        jPanel1.setMinimumSize(new java.awt.Dimension(600, 500));

        jPanel1.setMaximumSize(new java.awt.Dimension(400, 300));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 300));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Paket Console", "Deskripsi", "Stok", "Harga"
            }
        ));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButton1.setText("Edit Stok");
        jButton1.setMaximumSize(new java.awt.Dimension(123, 28));
        jButton1.setMinimumSize(new java.awt.Dimension(123, 28));
        jButton1.setPreferredSize(new java.awt.Dimension(123, 28));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jButton2.setText("Kembali ke Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Gudang");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(222, 222, 222))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih console yang akan diedit stoknya!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Ambil data dari tabel
        int consoleId = (Integer) tableModel.getValueAt(selectedRow, 0);
        String paketName = (String) tableModel.getValueAt(selectedRow, 1);
        int currentStock = (Integer) tableModel.getValueAt(selectedRow, 3);
        
        // Dialog untuk edit stok
        String[] options = {"Set Stok Baru", "Tambah Stok", "Kurangi Stok", "Batal"};
        int choice = JOptionPane.showOptionDialog(this,
                "Pilih aksi untuk console: " + paketName + "\nStok saat ini: " + currentStock,
                "Edit Stok Console",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
        
        if (choice == 3 || choice == -1) return; // Batal
        
        String inputPrompt = "";
        switch (choice) {
            case 0: inputPrompt = "Masukkan stok baru:"; break;
            case 1: inputPrompt = "Masukkan jumlah stok yang ditambahkan:"; break;
            case 2: inputPrompt = "Masukkan jumlah stok yang dikurangi:"; break;
        }
        
        String input = JOptionPane.showInputDialog(this, inputPrompt);
        if (input == null || input.trim().isEmpty()) return;
        
        try {
            int stockValue = Integer.parseInt(input.trim());
            if (stockValue < 0) {
                JOptionPane.showMessageDialog(this, "Nilai tidak boleh negatif!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            boolean success = false;
            String action = "";
            
            switch (choice) {
                case 0: // Set stok baru
                    success = adminControl.updateStockGudang(consoleId, stockValue);
                    action = "mengubah stok menjadi " + stockValue;
                    break;
                case 1: // Tambah stok
                    success = adminControl.addStockGudang(consoleId, stockValue);
                    action = "menambah stok sebanyak " + stockValue;
                    break;
                case 2: // Kurangi stok
                    if (stockValue > currentStock) {
                        JOptionPane.showMessageDialog(this, "Stok tidak mencukupi!\nStok saat ini: " + currentStock, "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    success = adminControl.reduceStockGudang(consoleId, stockValue);
                    action = "mengurangi stok sebanyak " + stockValue;
                    break;
            }
            
            if (success) {
                JOptionPane.showMessageDialog(this, "Berhasil " + action + " untuk console: " + paketName, "Sukses", JOptionPane.INFORMATION_MESSAGE);
                loadConsoleData(); // Refresh data
            } else {
                JOptionPane.showMessageDialog(this, "Gagal mengupdate stok!", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang valid!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Menu m = adminControl.getMenuView();
        m.setVisible(true);
    
    // Menutup form saat ini (optional)
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    /**
     * Load data console dari database ke tabel
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gudang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gudang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gudang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gudang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gudang().setVisible(true);
            }
        });
    }
    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    public void setController(AdminController controller) {
        this.adminControl = controller;
        //loadConsoleData();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
